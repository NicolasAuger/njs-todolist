Deadline:
    ☐ Lundi 5 Décembre 2016 @Critical

___________________________________________________________
BDD NoSQL:
    ☐ Token with Redis (Ioredis) @Optional
    ✔ Database MongoDB (Mongoose) @Needed @done(2016-11-18 16:01) @project(BDD NoSQL)

___________________________________________________________
Users:
    ✔ Create User Table in Database @done(2016-11-14 14:06) @project(Users)
    ✔ DL old Skeleton @done(2016-11-14 13:24) @project(Users)
    ✔ Add TD2 elements @done(2016-11-14 13:24) @project(Users)
    ✔ Add Password attribute @done(2016-11-14 14:06) @project(Users)
    ✔ Method GET @done(2016-11-18 16:00) @project(Users)
    ✔ Method PUT @done(2016-11-18 16:00) @project(Users)
    ✔ Method POST @done(2016-11-18 16:00) @project(Users)
    ✔ Method DELETE @done(2016-11-18 16:00) @project(Users)
    ✔ Manage JSON @Needed @done(2016-11-18 16:00) @project(Users)

    ✔ Use bcrypt module to hash password @done(2016-11-24 18:05)
    ☐ Add cookie-parser middleware

___________________________________________________________
Session:
    ☐ Create Sessions Table in Database (userId, accessToken, createdAt, expiresAt)
    ☐ Create REST "/sessions" resssource
        ☐ GET --> Display user/pass form
        ☐ POST --> Create accessToken and save it in database
            ☐ Set a cookie in HTML
            ☐ Return {accessToken: XXXX} in json

        ☐ DELETE --> Delete accessToken

    ☐ Create a new middleware for authentication
        ☐ HTML --> check AccessToken cookie
        ☐ JSON --> check X-AccessToken header
        ☐ No accessToken --> error for JSON, redicrect to authentication html page

___________________________________________________________
Todos:
    ✔ Create Todos Table in Database @done(2016-11-24 16:20) @project(Todos)
    ✔ Create REST "/todos" resssource (userId, message, createdAt, updatedAt, completedAt) @done(2016-11-24 16:20) @project(Todos)
        ✔ Method GET @done(2016-11-24 16:20) @project(Todos)
        ✔ Method PUT @done(2016-11-24 16:20) @project(Todos)
        ✔ Method POST @done(2016-11-24 16:20) @project(Todos)
        ✔ Method DELETE @done(2016-11-24 16:20) @project(Todos)
    ✔ Home page redirects to /Todos @done(2016-11-24 16:20) @project(Todos)
    ✔ Complete todos and move them to the end of the list @done(2016-11-24 16:21) @project(Todos)

___________________________________________________________
Team:
    ☐ A user can be in a team or not
    ☐ A user has an option "See my todos / See team's todos"
    ☐ Todos can be given to an other user from the same team
    ☐ Todos can be completed by every user of the team

___________________________________________________________
Visuels:
    ☐ User
    ✔ Users @done(2016-11-24 16:19) @project(Visuels)
    ✔ Todos @done(2016-11-24 16:19) @project(Visuels)
    ☐ Teams

___________________________________________________________
Notation:
    ✔ NoSQL @Needed @done(2016-11-18 16:05) @project(Notation)
    ☐ Respect what is asked
    ☐ Fonctionnal
    ✔ API Rest (Manage JSON) @done(2016-11-24 16:19) @project(Notation)
    ☐ Clean and detailled
    ☐ Asynchrone
    ☐ Security + Error management
    ✔ Database and ExpressJs @done(2016-11-18 16:05) @project(Notation)
    ☐ Authentication
    ☐ Import teams notion
    ✔ Use Git for code versionning @done(2016-11-18 16:05) @project(Notation)
    ✔ Security against SQL injections @done(2016-11-24 16:20) @project(Notation)
